# https://taskfile.dev

version: "3"

silent: true

dotenv: [".env", "envs/{{.ENVIRONMENT}}/.env"]

vars:
  GREETING: Terraform Taskfile!
  TF_JSON_FILE: plan.json
  TF_BIN_FILE: plan.bin
  TF_BACKEND_FILE: envs/{{.ENVIRONMENT}}/{{.REGION}}/{{.STACK}}/backend.tfvars
  TF_VAR_FILE: envs/{{.ENVIRONMENT}}/{{.REGION}}/{{.STACK}}/terraform.tfvars
  TF_GLOBAL_FILE: envs/{{.ENVIRONMENT}}/global/terraform.tfvars
  TF_PATH:
    sh: pwd

tasks:
  default:
    desc: ‚ÑπÔ∏è Default Task
    cmds:
      - echo "‚úîÔ∏è  {{.GREETING}} - run 'task -l' for more task list - {{now | date "2006-01-02"}}"
      - echo -n "‚ÑπÔ∏è  " && terraform --version | grep v
      - echo -n "‚ÑπÔ∏è  " && task --version

  print:
    cmds:
      - echo "==========================="
      - echo "üíª {{OS}} - {{ARCH}}"
      - echo "‚ÑπÔ∏è  STACK  => {{.STACK}}"
      - echo "‚ÑπÔ∏è  ENV    => {{.ENVIRONMENT}}"
      - echo "‚ÑπÔ∏è  REGION => {{.REGION}}"
      - echo "‚ÑπÔ∏è  TASK   => {{.OPS}}"
      - echo "==========================="

  clean:
    desc: ‚ÑπÔ∏è Clean Task for Terraform
    cmds:
      - rm -rf envs/{{.STACK}}/.terraform/
      - rm -f envs/{{.STACK}}/.terraform.lock.hcl
      - rm -f envs/{{.STACK}}/{{.TF_BIN_FILE}}
      - rm -f envs/{{.STACK}}/{{.TF_JSON_FILE}}

  init:
    desc: ‚ÑπÔ∏è Init Task for Terraform
    cmds:
      - terraform -chdir=stacks/{{.STACK}} init -backend-config=../../envs/{{.ENVIRONMENT}}/{{.REGION}}/{{.STACK}}/backend.tfvars -no-color >> logs/{{.ENVIRONMENT}}-{{.REGION}}-{{.STACK}}.log
      - echo "‚úîÔ∏è  TF init Completed for {{.ENVIRONMENT}}-{{.REGION}}-{{.STACK}}"

  validate:
    desc: ‚ÑπÔ∏è Validate Task for Terraform
    cmds:
      - terraform -chdir=stacks/{{.STACK}} validate -no-color >> logs/{{.ENVIRONMENT}}-{{.REGION}}-{{.STACK}}.log
      - echo "‚úîÔ∏è  TF validate Completed for {{.ENVIRONMENT}}-{{.REGION}}-{{.STACK}}"

  fmt:
    desc: ‚ÑπÔ∏è Format Task for Terraform
    cmds:
      - terraform -chdir=stacks/{{.STACK}} fmt -no-color >> logs/{{.ENVIRONMENT}}-{{.REGION}}-{{.STACK}}.log
      - echo "‚úîÔ∏è  TF format Completed for {{.ENVIRONMENT}}-{{.REGION}}-{{.STACK}}"

  plan:
    desc: ‚ÑπÔ∏è Plan Task for Terraform
    cmds:
      - AWS_PROFILE={{.ENVIRONMENT}} terraform -chdir=stacks/{{.STACK}} plan -var-file=../../envs/{{.ENVIRONMENT}}/{{.REGION}}/{{.STACK}}/terraform.tfvars -var-file=../../envs/{{.ENVIRONMENT}}/global/terraform.tfvars -out={{.TF_BIN_FILE}} # -no-color >> logs/{{.ENVIRONMENT}}-{{.REGION}}-{{.STACK}}.log
      - terraform -chdir=stacks/{{.STACK}} show --json {{.TF_BIN_FILE}} > stacks/{{.STACK}}/{{.TF_JSON_FILE}}
      - echo "‚úîÔ∏è  TF plan Completed for {{.ENVIRONMENT}}-{{.REGION}}-{{.STACK}}"

  apply:
    desc: ‚ÑπÔ∏è Apply Task for Terraform
    cmds:
      - AWS_PROFILE={{.ENVIRONMENT}} terraform -chdir=stacks/{{.STACK}} apply -auto-approve {{.TF_BIN_FILE}} # -no-color >> logs/{{.ENVIRONMENT}}-{{.REGION}}-{{.STACK}}.log
      - echo "‚úîÔ∏è  Apply Completed for {{.ENVIRONMENT}}-{{.REGION}}-{{.STACK}}"

  destroy:
    desc: ‚ÑπÔ∏è Destroy Task for Terraform
    cmds:
      - AWS_PROFILE={{.ENVIRONMENT}} terraform destroy -chdir=stacks/{{.STACK}} -var-file=../../envs/{{.ENVIRONMENT}}/{{.REGION}}/{{.STACK}}/terraform.tfvars -var-file=../../envs/{{.ENVIRONMENT}}/global/terraform.tfvars
      - echo "‚úîÔ∏è  Destroy Completed for {{.ENVIRONMENT}}-{{.REGION}}-{{.STACK}}"

  import:
    desc: ‚ÑπÔ∏è Import Task for Terraform
    cmds:
      - AWS_PROFILE={{.ENVIRONMENT}} terraform -chdir=stacks/{{.STACK}} import -var-file=../../envs/{{.ENVIRONMENT}}/{{.REGION}}/{{.STACK}}/terraform.tfvars -var-file=../../envs/{{.ENVIRONMENT}}/global/terraform.tfvars {{.CLI_ARGS}} >> logs/{{.ENVIRONMENT}}-{{.REGION}}-{{.STACK}}.log
      - echo "‚úîÔ∏è  Import Completed for {{.ENVIRONMENT}}-{{.REGION}}-{{.STACK}}"

  output:
    desc: ‚ÑπÔ∏è Output Task for Terraform
    cmds:
      - AWS_PROFILE={{.ENVIRONMENT}} terraform -chdir=stacks/{{.STACK}} output >> logs/{{.ENVIRONMENT}}-{{.REGION}}-{{.STACK}}.log
      - echo "‚úîÔ∏è  Output Completed for {{.ENVIRONMENT}}-{{.REGION}}-{{.STACK}}"

  tfdoc:
    desc: ‚ÑπÔ∏è Documentation Task for Terraform
    cmds:
      - terraform-docs markdown stacks/{{.STACK}} --output-file README.md
    ignore_error: true

  mgmt-master-build:
    cmds:
      - task: tfdoc
        vars:
          STACK: master
      - task: fmt
        vars:
          ENVIRONMENT: mgmt
          STACK: master
      - task: init
        vars:
          ENVIRONMENT: mgmt
          STACK: master
      - task: validate
        vars:
          ENVIRONMENT: mgmt
          STACK: master
      - task: plan
        vars:
          ENVIRONMENT: mgmt
          STACK: master

  mgmt-master-deploy:
    cmds:
      - task: apply
        vars:
          ENVIRONMENT: mgmt
          STACK: master

  mgmt-master-output:
    cmds:
      - task: output
        vars:
          ENVIRONMENT: mgmt
          STACK: master

  network-dev-build:
    cmds:
      - task: tfdoc
        vars:
          STACK: network
      - task: fmt
        vars:
          ENVIRONMENT: dev
          REGION: ca-central-1
          STACK: network
      - task: init
        vars:
          ENVIRONMENT: dev
          REGION: ca-central-1
          STACK: network
      - task: validate
        vars:
          ENVIRONMENT: dev
          REGION: ca-central-1
          STACK: network
      - task: plan
        vars:
          ENVIRONMENT: dev
          REGION: ca-central-1
          STACK: network

  network-dev-deploy:
    cmds:
      - task: apply
        vars:
          ENVIRONMENT: dev
          REGION: ca-central-1
          STACK: network

  network-dev-output:
    cmds:
      - task: output
        vars:
          ENVIRONMENT: dev
          REGION: ca-central-1
          STACK: network

  secure-sec-build:
    cmds:
      - task: tfdoc
        vars:
          STACK: secure
      - task: fmt
        vars:
          ENVIRONMENT: sec
          REGION: ca-central-1
          STACK: secure
      - task: init
        vars:
          ENVIRONMENT: sec
          REGION: ca-central-1
          STACK: secure
      - task: validate
        vars:
          ENVIRONMENT: sec
          REGION: ca-central-1
          STACK: secure
      - task: plan
        vars:
          ENVIRONMENT: sec
          REGION: ca-central-1
          STACK: secure

  secure-sec-deploy:
    cmds:
      - task: apply
        vars:
          ENVIRONMENT: sec
          REGION: ca-central-1
          STACK: secure

  secure-sec-output:
    cmds:
      - task: output
        vars:
          ENVIRONMENT: sec
          REGION: ca-central-1
          STACK: secure

  app-dev-build:
    cmds:
      - task: tfdoc
        vars:
          STACK: app
      - task: fmt
        vars:
          ENVIRONMENT: dev
          REGION: ca-central-1
          STACK: app
      - task: init
        vars:
          ENVIRONMENT: dev
          REGION: ca-central-1
          STACK: app
      - task: validate
        vars:
          ENVIRONMENT: dev
          REGION: ca-central-1
          STACK: app
      - task: plan
        vars:
          ENVIRONMENT: dev
          REGION: ca-central-1
          STACK: app

  app-dev-deploy:
    cmds:
      - task: apply
        vars:
          ENVIRONMENT: dev
          REGION: ca-central-1
          STACK: app

  app-dev-output:
    cmds:
      - task: output
        vars:
          ENVIRONMENT: dev
          REGION: ca-central-1
          STACK: app

  data-dev-build:
    cmds:
      - task: tfdoc
        vars:
          STACK: data
      - task: fmt
        vars:
          ENVIRONMENT: dev
          REGION: ca-central-1
          STACK: data
      - task: init
        vars:
          ENVIRONMENT: dev
          REGION: ca-central-1
          STACK: data
      - task: validate
        vars:
          ENVIRONMENT: dev
          REGION: ca-central-1
          STACK: data
      - task: plan
        vars:
          ENVIRONMENT: dev
          REGION: ca-central-1
          STACK: data

  data-dev-deploy:
    cmds:
      - task: apply
        vars:
          ENVIRONMENT: dev
          REGION: ca-central-1
          STACK: data

  data-dev-output:
    cmds:
      - task: output
        vars:
          ENVIRONMENT: dev
          REGION: ca-central-1
          STACK: data

  stack:app:
    desc: ‚ÑπÔ∏è Terraform App Stack Cli args
    dir: "stacks/app"
    cmds:
      - terraform {{.CLI_ARGS}}

  stack:data:
    desc: ‚ÑπÔ∏è Terraform Data Stack Cli args
    dir: "stacks/data"
    cmds:
      - terraform {{.CLI_ARGS}}

  stack:master:
    desc: ‚ÑπÔ∏è Terraform Master Stack Cli args
    dir: "stacks/master"
    cmds:
      - terraform {{.CLI_ARGS}}

  stack:network:
    desc: ‚ÑπÔ∏è Terraform Network Stack Cli args
    dir: "stacks/network"
    cmds:
      - terraform {{.CLI_ARGS}}

  stack:sec:
    desc: ‚ÑπÔ∏è Terraform Security Stack Cli args
    dir: "stacks/secure"
    cmds:
      - terraform {{.CLI_ARGS}}
